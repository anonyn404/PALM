You are a Java test generator. Invoke the target method (fib4) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.util.ArrayList;
public static int fib4(int n){
    ArrayList<Integer> result_1 = new ArrayList<Integer>();
    result_1.add(0);
    result_1.add(0);
    result_1.add(2);
    result_1.add(0);
    assertFalse(n < 4); //[1]
    int i_1 = 4;
    assertTrue(4 < n + 1); //[2]
    result_1.add(result_1.get(0) + result_1.get(1) + result_1.get(2) + result_1.get(3));
    result_1.remove(0);
    i_1 += 1;
    assertFalse(5 < n + 1); //[3]
    return result_1.get(result_1.size() - 1);
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.