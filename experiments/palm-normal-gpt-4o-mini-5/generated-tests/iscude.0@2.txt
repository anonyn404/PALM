You are a Java test generator. Invoke the target method (iscude) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.math.BigDecimal;
import java.math.RoundingMode;
public static boolean iscude(int a){
    a = Math.abs(a);
    double root_1 = Math.pow(a, 1. / 3);
    BigDecimal bd_1 = BigDecimal.valueOf(root_1);
    int round_root_1 = (int) bd_1.setScale(0, RoundingMode.HALF_UP).doubleValue();
    return ((int) Math.pow(round_root_1, 3)) == a;
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
public static void main(String args[]) { 
    assertTrue(iscude(0)); 
    assertTrue(iscude(1)); 
    assertTrue(iscude(8)); 
    assertTrue(iscude(27)); 
    assertTrue(iscude(64)); 
    assertTrue(iscude(125)); 
    assertFalse(iscude(2)); 
    assertFalse(iscude(3)); 
    assertFalse(iscude(10)); 
    assertFalse(iscude(19)); 
}
```
Error reason: Syntax error.
Round 1 generation:
```java
assertTrue(iscude(0)); 
assertTrue(iscude(1)); 
assertTrue(iscude(8)); 
assertTrue(iscude(27)); 
assertTrue(iscude(64)); 
assertTrue(iscude(125)); 
assertFalse(iscude(2)); 
assertFalse(iscude(3)); 
assertFalse(iscude(10)); 
assertFalse(iscude(19)); 
```
Error reason: Syntax error.
** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.