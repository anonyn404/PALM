You are a Java test generator. Invoke the target method (is_simple_power) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static boolean is_simple_power(int x, int n){
    assertFalse(n == 1); //[1]
    int power_1 = 1;
    assertTrue(1 < x); //[2]
    power_1 *= n;
    assertTrue(power_1 < x); //[3]
    power_1 *= n;
    assertFalse(power_1 < x); //[4]
    return power_1 == x;
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.