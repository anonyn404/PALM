You are a Java test generator. Invoke the target method (pluck) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static int[] pluck(int[] arr){
    int min_even_1 = Integer.MAX_VALUE;
    int index_1 = -1;
    int i_1 = 0;
    assertTrue(0 < arr.length); //[1]
    assertTrue(arr[0] % 2 == 0 && arr[0] < min_even_1); //[2]
    min_even_1 = arr[0];
    index_1 = 0;
    i_1 += 1;
    assertFalse(1 < arr.length); //[3]
    assertTrue(0 == -1); //[4]
    return new int[] {};
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
public static void main(String args[]) { 
    int[] arr = new int[] {2}; 
}
```
Error reason: The target method is not invoked in your generated test.
** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.