You are a Java test generator. Invoke the target method (get_closet_vowel) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.util.ArrayList;
import java.util.Arrays;
public static String get_closet_vowel(String word){
    assertFalse(word.length() < 3); //[1]
    ArrayList<Character> vowels_1 = new ArrayList<Character>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'));
    int i_1 = word.length() - 2;
    assertTrue(i_1 > 0); //[2]
    assertFalse(vowels_1.contains(word.charAt(i_1))); //[3]
    i_1--;
    assertTrue(i_1 > 0); //[4]
    assertTrue(vowels_1.contains(word.charAt(i_1))); //[5]
    assertTrue(!vowels_1.contains(word.charAt(i_1 + 1)) && !vowels_1.contains(word.charAt(i_1 - 1))); //[6]
    return word.substring(i_1, i_1 + 1);
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.