You are a Java test generator. Invoke the target method (mean_absolute_deviation) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.util.List;
public static double mean_absolute_deviation(List<Double> numbers){
    double sum_1 = 0.;
    Iterator<Double> number_iter_1 = numbers.iterator();
    Double number_1;
    assertTrue(number_iter_1.hasNext()); //[1]
    number_1 = number_iter_1.next();
    sum_1 += number_1;
    assertFalse(number_iter_1.hasNext()); //[2]
    double mean_1 = sum_1 / numbers.size();
    double deviation_sum_1 = 0.;
    Iterator<Double> number_iter_2 = numbers.iterator();
    Double number_2;
    assertFalse(number_iter_2.hasNext()); //[3]
    return deviation_sum_1 / numbers.size();
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
List<Double> list = new AbstractList<Double>() {
    boolean firstCall = true;
    @Override
    public Iterator<Double> iterator() {
        if (firstCall) {
            firstCall = false;
            return Collections.singletonList(1.0).iterator();
        } else {
            return Collections.emptyList().iterator();
        }
    }
    @Override
    public Double get(int index) {
        return 1.0;
    }
    @Override
    public int size() {
        return 1;
    }
};

mean_absolute_deviation(list);
```
Error reason: Syntax error.
Round 1 generation:
```java
List<Double> list = new AbstractList<Double>() {
    boolean firstCall = true;
    @Override
    public Iterator<Double> iterator() {
        if (firstCall) {
            firstCall = false;
            return Collections.singletonList(1.0).iterator();
        } else {
            return Collections.emptyList().iterator();
        }
    }
    @Override
    public Double get(int index) {
        return 1.0;
    }
    @Override
    public int size() {
        return 1;
    }
};
mean_absolute_deviation(list);
```
Error reason: Syntax error.
** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.