You are a Java test generator. Invoke the target method (same_chars) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.util.*;
public static boolean same_chars(String s0, String s1){
    HashSet<Character> set0_1 = new HashSet<Character>();
    HashSet<Character> set1_1 = new HashSet<Character>();
    char[] c0_array_1 = s0.toCharArray();
    char c0_1;
    assertTrue(0 < c0_array_1.length); //[1]
    c0_1 = c0_array_1[0];
    set0_1.add(c0_1);
    assertTrue(1 < c0_array_1.length); //[2]
    c0_1 = c0_array_1[1];
    set0_1.add(c0_1);
    assertFalse(2 < c0_array_1.length); //[3]
    char[] c1_array_1 = s1.toCharArray();
    char c1_1;
    assertFalse(0 < c1_array_1.length); //[4]
    return set0_1.equals(set1_1);
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.