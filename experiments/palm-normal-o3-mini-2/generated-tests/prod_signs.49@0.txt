You are a Java test generator. Invoke the target method (prod_signs) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static void prod_signs(int[] arr){
    assertFalse(arr.length == 0); //[1]
    int prod_1 = 1;
    int i_1 = 0;
    assertTrue(0 < arr.length); //[2]
    assertFalse(arr[0] == 0); //[3]
    assertFalse(arr[0] < 0); //[4]
    i_1++;
    assertTrue(1 < arr.length); //[5]
    assertTrue(arr[1] == 0); //[6]
    prod_1 = 0;
    i_1++;
    assertFalse(2 < arr.length); //[7]
    int sum_1 = 0;
    int i_2 = 0;
    assertTrue(0 < arr.length); //[8]
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.