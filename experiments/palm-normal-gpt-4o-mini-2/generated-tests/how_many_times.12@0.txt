You are a Java test generator. Invoke the target method (how_many_times) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static int how_many_times(String string, String substring){
    int times_1 = 0;
    int i_1 = 0;
    assertTrue(0 < string.length() - substring.length() + 1); //[1]
    assertFalse(string.substring(0, 0 + substring.length()).equals(substring)); //[2]
    i_1 += 1;
    assertTrue(1 < string.length() - substring.length() + 1); //[3]
    assertFalse(string.substring(1, 1 + substring.length()).equals(substring)); //[4]
    i_1 += 1;
    assertFalse(2 < string.length() - substring.length() + 1); //[5]
    return 0;
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.