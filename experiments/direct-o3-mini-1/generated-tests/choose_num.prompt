You are a symbolic‐execution‐based Java unit‐test generator. Consider loop‑bound=2. For recursive functions, depth-bound=2. Only enumerate paths in the target method (choose_num); ignore branches in other methods and API calls. Generate up to 50 tests invoking choose_num. Output each invocation as its own triple‑backtick code block. No comments or explanations.

** Example input **
boolean foo(int num) {
    if (num > 0) return true;
    else if (num < 0) return true;
    else return false;
}
** Example output **
```java
foo(5);
```
```java
foo(-5);
```
```java
foo(0);
```

** Program **
import java.util.*;
public class CHOOSE_NUM {

    public static int choose_num(int x, int y) {
        if (x > y)
            return -1;
        if ((y % 2) == 0)
            return y;
        if (x == y)
            return -1;
        return y - 1;
    }
}
