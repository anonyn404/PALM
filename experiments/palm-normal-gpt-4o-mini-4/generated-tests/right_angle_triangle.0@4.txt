You are a Java test generator. Invoke the target method (right_angle_triangle) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static boolean right_angle_triangle(int a, int b, int c){
    return a * a + b * b == c * c || b * b + c * c == a * a || c * c + a * a == b * b;
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
public static void main(String args[]) { 
    assertTrue(right_angle_triangle(3, 4, 5)); 
    assertTrue(right_angle_triangle(5, 12, 13)); 
    assertFalse(right_angle_triangle(1, 1, 1)); 
    assertFalse(right_angle_triangle(0, 0, 0)); 
}
```
Error reason: Syntax error.
Round 1 generation:
```java
    assertTrue(right_angle_triangle(3, 4, 5)); 
    assertTrue(right_angle_triangle(5, 12, 13)); 
    assertFalse(right_angle_triangle(1, 1, 1)); 
    assertFalse(right_angle_triangle(0, 0, 0)); 
    assertFalse(right_angle_triangle(2, 3, 4)); 
```
Error reason: Syntax error.
Round 2 generation:
```java
    assertTrue(right_angle_triangle(3, 4, 5)); 
    assertTrue(right_angle_triangle(5, 12, 13)); 
    assertFalse(right_angle_triangle(1, 1, 1)); 
    assertFalse(right_angle_triangle(0, 0, 0)); 
    assertFalse(right_angle_triangle(2, 3, 4)); 
```
Error reason: Syntax error.
Round 3 generation:
```java
    assertTrue(right_angle_triangle(3, 4, 5)); 
    assertTrue(right_angle_triangle(5, 12, 13)); 
    assertFalse(right_angle_triangle(1, 1, 1)); 
    assertFalse(right_angle_triangle(0, 0, 0)); 
    assertFalse(right_angle_triangle(2, 3, 4)); 
    assertFalse(right_angle_triangle(1, 2, 3)); 
```
Error reason: Syntax error.
** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.