You are a Java test generator. Invoke the target method (flip_case) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static String flip_case(String string){
    char[] char_list_1 = string.toCharArray();
    int i_1 = 0;
    assertTrue(0 < char_list_1.length); //[1]
    char c_1 = char_list_1[0];
    assertFalse(Character.isLowerCase(c_1)); //[2]
    char_list_1[i_1] = Character.toLowerCase(c_1);
    i_1 += 1;
    assertTrue(1 < char_list_1.length); //[3]
    char c_2 = char_list_1[1];
    assertTrue(Character.isLowerCase(c_2)); //[4]
    char_list_1[i_1] = Character.toUpperCase(c_2);
    i_1 += 1;
    assertFalse(2 < char_list_1.length); //[5]
    return new String(char_list_1);
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.