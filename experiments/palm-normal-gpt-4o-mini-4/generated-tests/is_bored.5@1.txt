You are a Java test generator. Invoke the target method (is_bored) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static void is_bored(String S){
    String[] sentences_1 = S.split("\\.|\\?|!");
    int result_1 = 0;
    String sentence_1;
    assertTrue(0 < sentences_1.length); //[1]
    sentence_1 = sentences_1[0];
    sentence_1 = sentence_1.trim();
    assertTrue(sentence_1.length() >= 2 && sentence_1.subSequence(0, 2).equals("I ")); //[2]
    result_1 += 1;
    assertTrue(1 < sentences_1.length); //[3]
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
main(new String[] { "I am bored. Are you?" });
```
Error reason: The target method is not invoked in your generated test.
** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.