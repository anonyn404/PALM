You are a Java test generator. Invoke the target method (is_bored) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static int is_bored(String S){
    String[] sentences_1 = S.split("\\.|\\?|!");
    int result_1 = 0;
    String sentence_1;
    assertTrue(0 < sentences_1.length); //[1]
    sentence_1 = sentences_1[0];
    sentence_1 = sentence_1.trim();
    assertFalse(sentence_1.length() >= 2 && sentence_1.subSequence(0, 2).equals("I ")); //[2]
    assertTrue(1 < sentences_1.length); //[3]
    sentence_1 = sentences_1[1];
    sentence_1 = sentence_1.trim();
    assertTrue(sentence_1.length() >= 2 && sentence_1.subSequence(0, 2).equals("I ")); //[4]
    result_1 += 1;
    assertFalse(2 < sentences_1.length); //[5]
    return 1;
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.