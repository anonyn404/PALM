You are a Java test generator. Invoke the target method (anti_shuffle) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.util.Arrays;
public static String anti_shuffle(String s){
    String result_1 = "";
    java.lang.String[] str_array_1 = s.split(" ");
    String str_1;
    assertFalse(0 < str_array_1.length); //[1]
    return result_1.substring(0, result_1.length() - 1);
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
anti_shuffle(" ");
```
Error reason: Exception in thread "main" java.lang.StringIndexOutOfBoundsException: begin 0, end -1, length 0
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4608)
	at java.base/java.lang.String.substring(String.java:2711)
	at ANTI_SHUFFLE.anti_shuffle(anti_shuffle.1.java:12)
	at ANTI_SHUFFLE.main(anti_shuffle.1.java:18)

** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.