You are a Java test generator. Invoke the target method (derivative) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.util.ArrayList;
import java.util.List;
public static List<Integer> derivative(List<Integer> xs){
    List<Integer> result_1 = new ArrayList<Integer>();
    int i_1 = 1;
    assertTrue(1 < xs.size()); //[1]
    result_1.add(1 * xs.get(1));
    i_1 += 1;
    assertTrue(2 < xs.size()); //[2]
    result_1.add(2 * xs.get(2));
    i_1 += 1;
    assertFalse(3 < xs.size()); //[3]
    return result_1;
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.