You are a Java test generator. Invoke the target method (strange_sort_list) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
public static List<Integer> strange_sort_list(List<Integer> lst){
    List<Integer> result_1 = new ArrayList<Integer>();
    boolean switched_1 = true;
    assertTrue(lst.size() > 0); //[1]
    assertTrue(true); //[2]
    result_1.add(Collections.min(lst));
    lst.remove(result_1.get(result_1.size() - 1));
    switched_1 = (!true);
    assertFalse(lst.size() > 0); //[3]
    return result_1;
}


** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.