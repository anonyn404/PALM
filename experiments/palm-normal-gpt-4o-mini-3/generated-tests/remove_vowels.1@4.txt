You are a Java test generator. Invoke the target method (remove_vowels) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static String remove_vowels(String string){
    StringBuilder sb_1 = new StringBuilder();
    char[] c_array_1 = string.toCharArray();
    char c_1;
    assertFalse(0 < c_array_1.length); //[1]
    return sb_1.toString();
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
remove_vowels(null);
remove_vowels("");
```
Error reason: Exception in thread "main" java.lang.NullPointerException: Cannot invoke "String.toCharArray()" because "<parameter1>" is null
	at REMOVE_VOWELS.remove_vowels(remove_vowels.1.java:8)
	at REMOVE_VOWELS.main(remove_vowels.1.java:17)

Round 1 generation:
```java
remove_vowels("a");
remove_vowels("b");
```
Error reason: the assertion [1] is not satisfied, assertFalse(0 < c_array_1.length) 
Round 2 generation:
```java
remove_vowels("aeiou");
remove_vowels("bcd");
remove_vowels("");
```
Error reason: the assertion [1] is not satisfied, assertFalse(0 < c_array_1.length) 
Round 3 generation:
```java
remove_vowels("b");
remove_vowels(" ");
remove_vowels(null);
```
Error reason: the assertion [1] is not satisfied, assertFalse(0 < c_array_1.length) 
** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.