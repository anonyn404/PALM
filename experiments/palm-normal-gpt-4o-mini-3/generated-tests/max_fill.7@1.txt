You are a Java test generator. Invoke the target method (max_fill) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
public static int max_fill(int[][] grid, int bucket_capacity){
    int result_1 = 0;
    int i_1 = 0;
    assertTrue(0 < grid.length); //[1]
    int row_capacity_1 = 0;
    int j_1 = 0;
    assertFalse(0 < grid[0].length); //[2]
    result_1 += (0 + bucket_capacity - 1) / bucket_capacity;
    i_1++;
    assertFalse(1 < grid.length); //[3]
    return result_1;
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
main(new String[]{"[[1, 2], [3, 4]]", "5"});
```
Error reason: The target method is not invoked in your generated test.
** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.