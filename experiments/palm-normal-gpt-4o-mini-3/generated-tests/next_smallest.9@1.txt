You are a Java test generator. Invoke the target method (next_smallest) with concrete inputs so that all `assertTrue` and `assertFalse` statements pass.
Allow edge cases (e.g. null, empty) if they meet those constraints. Include no printing, error handling, unrelated logic or return‑value checks.

** Input program **
import java.util.*;
import java.util.*;
public static Integer next_smallest(int[] lst){
    HashSet<Integer> numbers_1 = new HashSet<Integer>();
    Integer n_1;
    assertTrue(0 < lst.length); //[1]
    n_1 = lst[0];
    numbers_1.add(n_1);
    assertTrue(1 < lst.length); //[2]
    n_1 = lst[1];
    numbers_1.add(n_1);
    assertFalse(2 < lst.length); //[3]
    Integer[] no_duplicate_1 = numbers_1.toArray(new Integer[] {});
    Arrays.sort(no_duplicate_1);
    assertTrue(no_duplicate_1.length < 2); //[4]
    return null;
}

** Feedback **
You have previously generated concrete unit tests, but each of them violated some assertions. Please regenerate a valid unit test based on the feedback provided below.
Round 0 generation:
```java
public static void main(String args[]) { 
    int[] lst = new int[]{1, 1}; 
}
```
Error reason: The target method is not invoked in your generated test.
** Output Format **
If satisfiable, output :
```java
// write you code here
```

Only output the code to replace <hole> in the auxiliary test driver:
public static void main(String args[]) { <hole> }

If no input can satisfy the path condition, output:
UNSAT

Only generate a java unit test or UNSAT without any explanation or comments.