{
  "Factorial (Capped Recursion)": "public class TEST {\n  public static int test(int n) {\n    if (n < 0 || n > 10) return -1;\n    if (n <= 1) return 1;\n    return n * test(n - 1);\n  }\n}",
  "Count Positives Until Negative": "public class TEST {\n  public static int test(int[] arr) {\n    int count = 0;\n    int i = 0;\n    while (i < arr.length && arr[i] >= 0) {\n      count++;\n      i++;\n    }\n    return count;\n  }\n}",
  "Sum of Three Values": "public class TEST {\n  public static int test(int a, int b, int c) {\n    int sum = 0;\n    int[] arr = {a, b, c};\n    for (int i = 0; i < 3; i++) {\n      sum += arr[i];\n    }\n    return sum;\n  }\n}",
  "Count Until Zero": "public class TEST {\n  public static int test(int a, int b, int c) {\n    int[] arr = {a, b, c};\n    int count = 0;\n    for (int i = 0; i < 3; i++) {\n      if (arr[i] == 0) break;\n      count++;\n    }\n    return count;\n  }\n}",
  "Double Until Limit (Do-While Loop)": "public class TEST {\n  public static int test(int x) {\n    int count = 0;\n    do {\n      x *= 2;\n      count++;\n    } while (count < 3 && x < 50);\n    return count;\n  }\n}",
  "Simple": "public class TEST_PALM { \nstatic int test_palm(int a, int b) {\n        if (a > b) {\n            return a;\n        } else {\n            return b;\n        }\n    }\n}",
  "Tutorial": "public class TUTORIAL {\n  public static boolean tutorial(int x, int y, int z) {\n    if (x > 0) z = -z - 5; // branch B0 \n    if (y + z > 0) return true; // branch B1 \n   else return false;\n  }\n}",
  "Triangle": "public class TRIANGLE {\n  public static void triangle(int a, int b, int c) {\n    int x, y, z;\n    if (a <= b) { // B0\n      if (b <= c) { x = a; y = b; z = c;} // B1\n      else if (c < a) { x = c; y = a; z = b;} // B2: if (c < a) \n      else { x = a; y = c; z = b;}\n    } else {\n      if (c > a) { x = b; y = a; z = c;} // B3\n      else if (c < b) { x = c; y = b; z = a;} // B4: if(c < b) \n      else { x = b; y = c; z = a;}\n    }\n    if (x + y <= z) { // B6\n      System.out.println(\"Not a valid triangle\");\n    } else {\n      System.out.println(\"A valid triangle\");\n    }\n  }\n}\n",
  "Cute Array": "public class CUTEARRAY {\n  public static int cutearray(int[] a) {\n    int sum = 0;\n    for (int i = 0; i < a.length - 2; i++) {\n      if ((a[i] + a[i + 1] + a[i + 2]) % 7 == 0) { // B0 \n        sum += 1;\n        a[i + 1] += 1;\n      }\n    }\n    return sum;\n  }\n}\n"
}